URL:                 http://craftwear.com.ua/skin/adminhtml/default/default/images/grid-cal.gif
Версия Magento:      2.40.1 (1.7.0.2)
Версия PHP:          5.4.43
Время:               2016-01-14 14:54:06 MSK
Оформительская тема: default / default
***********************************
Warning: include(/home3/pyavcom/public_html/craft3/app/code/local/Df/Core/Model/Event/CoreBlockAbstract/ToHtml/Abstract.php): failed to open stream: Too many open files in system  in /home3/pyavcom/public_html/craft3/lib/Varien/Autoload.php on line 93
***********************************
Файл:        lib/Varien/Autoload.php
Строка:      93
Субъект:     Varien_Autoload::autoload
Объект:      mageCoreErrorHandler
Контекст:    
if ($this->_isIncludePathDefined) {
            $classFile =  COMPILER_INCLUDE_PATH . DIRECTORY_SEPARATOR . $class;
        } else {
            $classFile = str_replace(' ', DIRECTORY_SEPARATOR, ucwords(str_replace('_', ' ', $class)));
        }
        $classFile.= '.php';
        //echo $classFile;die();
        return include $classFile;
    }

    /**
     * Register autoload scope
     * This process allow include scope file which can contain classes
     * definition which are used for this scope
     *
     * @param string $code scope code
************************************
Файл:        lib/Varien/Autoload.php
Строка:      93
Субъект:     Varien_Autoload::autoload
Объект:      Varien_Autoload::autoload
Контекст:    
if ($this->_isIncludePathDefined) {
            $classFile =  COMPILER_INCLUDE_PATH . DIRECTORY_SEPARATOR . $class;
        } else {
            $classFile = str_replace(' ', DIRECTORY_SEPARATOR, ucwords(str_replace('_', ' ', $class)));
        }
        $classFile.= '.php';
        //echo $classFile;die();
        return include $classFile;
    }

    /**
     * Register autoload scope
     * This process allow include scope file which can contain classes
     * definition which are used for this scope
     *
     * @param string $code scope code
************************************
Файл:        
Строка:      0
Субъект:     spl_autoload_call
Объект:      Varien_Autoload::autoload
Файл:        app/code/local/Df/Core/Model/Dispatcher.php
Строка:      184
Субъект:     Df_Core_Model_Dispatcher::core_block_abstract_to_html_before
Объект:      spl_autoload_call
Контекст:    
	 */
	public function core_block_abstract_to_html_before(Varien_Event_Observer $observer) {
		try {
			/** @var Mage_Core_Block_Abstract $currentBlock */
			$currentBlock =
				$observer->getData(
					Df_Core_Model_Event_CoreBlockAbstract_ToHtml_Abstract::EVENT_PARAM__BLOCK
				)
			;
			rm_state()->setCurrentBlock($currentBlock);
		}
		catch(Exception $e) {
			df_handle_entry_point_exception($e);
		}
	}
************************************
Файл:        app/code/core/Mage/Core/Model/App.php
Строка:      1338
Субъект:     Mage_Core_Model_App::_callObserverMethod
Объект:      Df_Core_Model_Dispatcher::core_block_abstract_to_html_before
Контекст:    
* @param Varien_Event_Observer $observer
     * @return Mage_Core_Model_App
     * @throws Mage_Core_Exception
     */
    protected function _callObserverMethod($object, $method, $observer)
    {
        if (method_exists($object, $method)) {
            $object->$method($observer);
        } elseif (Mage::getIsDeveloperMode()) {
            Mage::throwException('Method "'.$method.'" is not defined in "'.get_class($object).'"');
        }
        return $this;
    }

    public function setUpdateMode($value)
    {
************************************
Файл:        app/code/core/Mage/Core/Model/App.php
Строка:      1317
Субъект:     Mage_Core_Model_App::dispatchEvent
Объект:      Mage_Core_Model_App::_callObserverMethod
Контекст:    
$object = Mage::getModel($obs['model']);
                        $this->_callObserverMethod($object, $method, $observer);
                        break;
                    default:
                        $method = $obs['method'];
                        $observer->addData($args);
                        $object = Mage::getSingleton($obs['model']);
                        $this->_callObserverMethod($object, $method, $observer);
                        break;
                }
                Varien_Profiler::stop('OBSERVER: '.$obsName);
            }
        }
        return $this;
    }
************************************
Файл:        app/Mage.php
Строка:      447
Субъект:     Mage::dispatchEvent
Объект:      Mage_Core_Model_App::dispatchEvent
Контекст:    
* @param string $name
     * @param array $data
     * @return Mage_Core_Model_App
     */
    public static function dispatchEvent($name, array $data = array())
    {
        Varien_Profiler::start('DISPATCH EVENT:'.$name);
        $result = self::app()->dispatchEvent($name, $data);
        Varien_Profiler::stop('DISPATCH EVENT:'.$name);
        return $result;
    }

    /**
     * Retrieve model object
     *
     * @link    Mage_Core_Model_Config::getModelInstance
************************************
Файл:        app/code/core/Mage/Core/Block/Abstract.php
Строка:      847
Субъект:     Mage_Core_Block_Abstract::toHtml
Объект:      Mage::dispatchEvent
Контекст:    
*
     * It is a final method, but you can override _toHtml() method in descendants if needed.
     *
     * @return string
     */
    final public function toHtml()
    {
        Mage::dispatchEvent('core_block_abstract_to_html_before', array('block' => $this));
        if (Mage::getStoreConfig('advanced/modules_disable_output/' . $this->getModuleName())) {
            return '';
        }
        $html = $this->_loadCache();
        if ($html === false) {
            $translate = Mage::getSingleton('core/translate');
            /** @var $translate Mage_Core_Model_Translate */
            if ($this->hasData('translate_inline')) {
************************************
Файл:        app/code/local/Df/Qa/Model/Message.php
Строка:      24
Субъект:     Df_Qa_Model_Message::getMessage
Объект:      Mage_Core_Block_Abstract::toHtml
Контекст:    
					,array(
						self::BLOCK_PARAM__MODEL => $this
						,'area' => 'frontend'
					)
				)
			;
			$block->setTemplate($this->getTemplate());
			$this->{__METHOD__} = $block->toHtml();
		}
		return $this->{__METHOD__};
	}

	/** @return Df_Qa_Model_Message */
	public function log() {
		if ($this->needLogToFile()) {
			$this->writeToFile();
************************************
Файл:        app/code/local/Df/Qa/Model/Message.php
Строка:      122
Субъект:     Df_Qa_Model_Message::writeToFile
Объект:      Df_Qa_Model_Message::getMessage
Контекст:    
	private function needNotifyAdmin() {return $this->cfg(self::P__NEED_NOTIFY_ADMIN, false);}

	/** @return bool */
	private function needNotifyDeveloper() {return $this->cfg(self::P__NEED_NOTIFY_DEVELOPER, false);}

	/** @return Df_Qa_Model_Message */
	private function writeToFile() {
		df()->debug()->report($this->getFileName(), $this->getMessage());
		return $this;
	}

	/**
	 * @override
	 * @return void
	 */
	protected function _construct() {
************************************
Файл:        app/code/local/Df/Qa/Model/Message.php
Строка:      32
Субъект:     Df_Qa_Model_Message::log
Объект:      Df_Qa_Model_Message::writeToFile
Контекст:    
		}
		return $this->{__METHOD__};
	}

	/** @return Df_Qa_Model_Message */
	public function log() {
		if ($this->needLogToFile()) {
			$this->writeToFile();
		}
		if ($this->needMail()) {
			$this->mail();
		}
		return $this;
	}

	/** @return string */
************************************
Файл:        app/code/local/Df/Core/lib/fp/other.php
Строка:      398
Субъект:     df_notify_exception
Объект:      Df_Qa_Model_Message::log
Контекст:    
		$exception = new Df_Core_Exception_Client($exception);
	}
	Df_Qa_Model_Message_Failure_Exception::i(array(
		Df_Qa_Model_Message_Failure_Exception::P__EXCEPTION => $exception
		,Df_Qa_Model_Message_Failure_Exception::P__FILE_NAME => $filename
		,Df_Qa_Model_Message_Failure_Exception::P__NEED_LOG_TO_FILE => true
		,Df_Qa_Model_Message_Failure_Exception::P__NEED_NOTIFY_DEVELOPER => true
	))->log();
}

/**
 * @param string $message
 * @param bool $doLog [optional]
 * @return void
 */
function df_notify_me($message, $doLog = true) {
************************************
Файл:        app/code/local/Df/Core/lib/fp/other.php
Строка:      136
Субъект:     df_handle_entry_point_exception
Объект:      df_notify_exception
Контекст:    
* @return void
 */
function df_handle_entry_point_exception(Exception $e, $rethrow = null, $sendContentTypeHeader = true) {
	/**
	 * Надо учесть, что исключительная ситуация могла произойти при асинхронном запросе,
	 * и в такой ситуации echo() неэффективно.
	 */
	df_notify_exception($e);
	/**
	 * В режиме разработчика
	 * по умолчанию выводим диагностическое сообщение на экран
	 * (но это можно отключить посредством $rethrow = false).
	 *
	 * При отключенном режиме разработчика
	 * по умолчанию не выводим диагностическое сообщение на экран
	 * (но это можно отключить посредством $rethrow = true).
************************************
Файл:        app/code/local/Df/Tweaks/Model/Dispatcher.php
Строка:      41
Субъект:     Df_Tweaks_Model_Dispatcher::controller_action_layout_generate_blocks_after
Объект:      df_handle_entry_point_exception
Контекст:    
						df_cfg()->tweaks()->catalog()->product()->view()->needHideTags()
				) {
					df()->layout()->removeBlock('product_tag_list');
				}
			}
		}
		catch(Exception $e) {
			df_handle_entry_point_exception($e);
		}
	}

	/**
	 * @param Varien_Event_Observer $observer
	 * @return void
	 */
	public function catalog_product_is_salable_after(Varien_Event_Observer $observer) {
************************************
Файл:        app/code/core/Mage/Core/Model/App.php
Строка:      1338
Субъект:     Mage_Core_Model_App::_callObserverMethod
Объект:      Df_Tweaks_Model_Dispatcher::controller_action_layout_generate_blocks_after
Контекст:    
* @param Varien_Event_Observer $observer
     * @return Mage_Core_Model_App
     * @throws Mage_Core_Exception
     */
    protected function _callObserverMethod($object, $method, $observer)
    {
        if (method_exists($object, $method)) {
            $object->$method($observer);
        } elseif (Mage::getIsDeveloperMode()) {
            Mage::throwException('Method "'.$method.'" is not defined in "'.get_class($object).'"');
        }
        return $this;
    }

    public function setUpdateMode($value)
    {
************************************
Файл:        app/code/core/Mage/Core/Model/App.php
Строка:      1317
Субъект:     Mage_Core_Model_App::dispatchEvent
Объект:      Mage_Core_Model_App::_callObserverMethod
Контекст:    
$object = Mage::getModel($obs['model']);
                        $this->_callObserverMethod($object, $method, $observer);
                        break;
                    default:
                        $method = $obs['method'];
                        $observer->addData($args);
                        $object = Mage::getSingleton($obs['model']);
                        $this->_callObserverMethod($object, $method, $observer);
                        break;
                }
                Varien_Profiler::stop('OBSERVER: '.$obsName);
            }
        }
        return $this;
    }
************************************
Файл:        app/Mage.php
Строка:      447
Субъект:     Mage::dispatchEvent
Объект:      Mage_Core_Model_App::dispatchEvent
Контекст:    
* @param string $name
     * @param array $data
     * @return Mage_Core_Model_App
     */
    public static function dispatchEvent($name, array $data = array())
    {
        Varien_Profiler::start('DISPATCH EVENT:'.$name);
        $result = self::app()->dispatchEvent($name, $data);
        Varien_Profiler::stop('DISPATCH EVENT:'.$name);
        return $result;
    }

    /**
     * Retrieve model object
     *
     * @link    Mage_Core_Model_Config::getModelInstance
************************************
Файл:        app/code/core/Mage/Core/Controller/Varien/Action.php
Строка:      351
Субъект:     Mage_Core_Controller_Varien_Action::generateLayoutBlocks
Объект:      Mage::dispatchEvent
Контекст:    
$this->getLayout()->generateBlocks();
        Varien_Profiler::stop("$_profilerKey::layout_generate_blocks");

        if(!$this->getFlag('', self::FLAG_NO_DISPATCH_BLOCK_EVENT)) {
            Mage::dispatchEvent(
                'controller_action_layout_generate_blocks_after',
                array('action'=>$this, 'layout'=>$this->getLayout())
            );
        }

        return $this;
    }

    /**
     * Rendering layout
     *
************************************
Файл:        app/code/core/Mage/Cms/Helper/Page.php
Строка:      113
Субъект:     Mage_Cms_Helper_Page::_renderPage
Объект:      Mage_Core_Controller_Varien_Action::generateLayoutBlocks
Контекст:    
Mage::dispatchEvent('cms_page_render', array('page' => $page, 'controller_action' => $action));

        $action->loadLayoutUpdates();
        $layoutUpdate = ($page->getCustomLayoutUpdateXml() && $inRange)
            ? $page->getCustomLayoutUpdateXml() : $page->getLayoutUpdateXml();
        $action->getLayout()->getUpdate()->addUpdate($layoutUpdate);
        $action->generateLayoutXml()->generateLayoutBlocks();

        $contentHeadingBlock = $action->getLayout()->getBlock('page_content_heading');
        if ($contentHeadingBlock) {
            $contentHeading = $this->escapeHtml($page->getContentHeading());
            $contentHeadingBlock->setContentHeading($contentHeading);
        }

        if ($page->getRootTemplate()) {
************************************
Файл:        app/code/core/Mage/Cms/Helper/Page.php
Строка:      52
Субъект:     Mage_Cms_Helper_Page::renderPage
Объект:      Mage_Cms_Helper_Page::_renderPage
Контекст:    
*
    * @param Mage_Core_Controller_Front_Action $action
    * @param integer $pageId
    * @return boolean
    */
    public function renderPage(Mage_Core_Controller_Front_Action $action, $pageId = null)
    {
        return $this->_renderPage($action, $pageId);
    }

   /**
    * Renders CMS page
    *
    * @param Mage_Core_Controller_Front_Action $action
    * @param integer $pageId
    * @param bool $renderLayout
************************************
Файл:        app/code/core/Mage/Cms/controllers/IndexController.php
Строка:      75
Субъект:     Mage_Cms_IndexController::noRouteAction
Объект:      Mage_Cms_Helper_Page::renderPage
Контекст:    
*/
    public function noRouteAction($coreRoute = null)
    {
        $this->getResponse()->setHeader('HTTP/1.1','404 Not Found');
        $this->getResponse()->setHeader('Status','404 File not found');

        $pageId = Mage::getStoreConfig(Mage_Cms_Helper_Page::XML_PATH_NO_ROUTE_PAGE);
        if (!Mage::helper('cms/page')->renderPage($this, $pageId)) {
            $this->_forward('defaultNoRoute');
        }
    }

    /**
     * Default no route page action
     * Used if no route page don't configure or available
     *
************************************
Файл:        app/code/core/Mage/Core/Controller/Varien/Action.php
Строка:      419
Субъект:     Mage_Core_Controller_Varien_Action::dispatch
Объект:      Mage_Cms_IndexController::noRouteAction
Контекст:    
/**
                 * preDispatch() didn't change the action, so we can continue
                 */
                if (!$this->getFlag('', self::FLAG_NO_DISPATCH)) {
                    $_profilerKey = self::PROFILER_KEY.'::'.$this->getFullActionName();

                    Varien_Profiler::start($_profilerKey);
                    $this->$actionMethodName();
                    Varien_Profiler::stop($_profilerKey);

                    Varien_Profiler::start(self::PROFILER_KEY.'::postdispatch');
                    $this->postDispatch();
                    Varien_Profiler::stop(self::PROFILER_KEY.'::postdispatch');
                }
            }
        }
************************************
Файл:        app/code/core/Mage/Core/Controller/Varien/Router/Standard.php
Строка:      250
Субъект:     Mage_Core_Controller_Varien_Router_Standard::match
Объект:      Mage_Core_Controller_Varien_Action::dispatch
Контекст:    
// set parameters from pathinfo
        for ($i = 3, $l = sizeof($p); $i < $l; $i += 2) {
            $request->setParam($p[$i], isset($p[$i+1]) ? urldecode($p[$i+1]) : '');
        }

        // dispatch action
        $request->setDispatched(true);
        $controllerInstance->dispatch($action);

        return true;
    }

    /**
     * Get router default request path
     * @return string
     */
************************************
Файл:        app/code/core/Mage/Core/Controller/Varien/Front.php
Строка:      176
Субъект:     Mage_Core_Controller_Varien_Front::dispatch
Объект:      Mage_Core_Controller_Varien_Router_Standard::match
Контекст:    
Varien_Profiler::start('mage::dispatch::config_url_rewrite');
        $this->rewrite();
        Varien_Profiler::stop('mage::dispatch::config_url_rewrite');
        Varien_Profiler::start('mage::dispatch::routers_match');
        $i = 0;
        while (!$request->isDispatched() && $i++<100) {
            foreach ($this->_routers as $router) {
                if ($router->match($this->getRequest())) {
                    break;
                }
            }
        }
        Varien_Profiler::stop('mage::dispatch::routers_match');
        if ($i>100) {
            Mage::throwException('Front controller reached 100 router match iterations');
        }
************************************
Файл:        app/code/core/Mage/Core/Model/App.php
Строка:      354
Субъект:     Mage_Core_Model_App::run
Объект:      Mage_Core_Controller_Varien_Front::dispatch
Контекст:    
$scopeCode = isset($params['scope_code']) ? $params['scope_code'] : '';
                $scopeType = isset($params['scope_type']) ? $params['scope_type'] : 'store';
                $this->_initCurrentStore($scopeCode, $scopeType);
                $this->_initRequest();
                Mage_Core_Model_Resource_Setup::applyAllDataUpdates();
            }

            $this->getFrontController()->dispatch();
        }
        return $this;
    }

    /**
     * Initialize PHP environment
     *
     * @return Mage_Core_Model_App
************************************
Файл:        app/Mage.php
Строка:      683
Субъект:     Mage::run
Объект:      Mage_Core_Model_App::run
Контекст:    
self::$_events = new Varien_Event_Collection();
            self::_setIsInstalled($options);
            self::_setConfigModel($options);
            self::$_app->run(array(
                'scope_code' => $code,
                'scope_type' => $type,
                'options'    => $options,
            ));
            Varien_Profiler::stop('mage');
        } catch (Mage_Core_Model_Session_Exception $e) {
            header('Location: ' . self::getBaseUrl());
            die();
        } catch (Mage_Core_Model_Store_Exception $e) {
            require_once(self::getBaseDir() . DS . 'errors' . DS . '404.php');
            die();
        } catch (Exception $e) {
************************************
Файл:        index.php
Строка:      87
Субъект:     
Объект:      Mage::run
Контекст:    
/* Store or website code */
$mageRunCode = isset($_SERVER['MAGE_RUN_CODE']) ? $_SERVER['MAGE_RUN_CODE'] : '';

/* Run store or run website */
$mageRunType = isset($_SERVER['MAGE_RUN_TYPE']) ? $_SERVER['MAGE_RUN_TYPE'] : 'store';

Mage::run($mageRunCode, $mageRunType);
************************************