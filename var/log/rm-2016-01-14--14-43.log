URL:                 http://craftwear.com.ua/woman-underpants-be-active-blackberry.html
Версия Magento:      2.40.1 (1.7.0.2)
Версия PHP:          5.4.43
Время:               2016-01-14 14:43:55 MSK
Оформительская тема: default / default
***********************************
Warning: include(/home3/pyavcom/public_html/craft3/app/code/core/Mage/Catalog/Block/Product/View/Type/Configurable.php): failed to open stream: Too many open files in system  in /home3/pyavcom/public_html/craft3/lib/Varien/Autoload.php on line 93
***********************************
Файл:        lib/Varien/Autoload.php
Строка:      93
Субъект:     Varien_Autoload::autoload
Объект:      mageCoreErrorHandler
Контекст:    
if ($this->_isIncludePathDefined) {
            $classFile =  COMPILER_INCLUDE_PATH . DIRECTORY_SEPARATOR . $class;
        } else {
            $classFile = str_replace(' ', DIRECTORY_SEPARATOR, ucwords(str_replace('_', ' ', $class)));
        }
        $classFile.= '.php';
        //echo $classFile;die();
        return include $classFile;
    }

    /**
     * Register autoload scope
     * This process allow include scope file which can contain classes
     * definition which are used for this scope
     *
     * @param string $code scope code
************************************
Файл:        lib/Varien/Autoload.php
Строка:      93
Субъект:     Varien_Autoload::autoload
Объект:      Varien_Autoload::autoload
Контекст:    
if ($this->_isIncludePathDefined) {
            $classFile =  COMPILER_INCLUDE_PATH . DIRECTORY_SEPARATOR . $class;
        } else {
            $classFile = str_replace(' ', DIRECTORY_SEPARATOR, ucwords(str_replace('_', ' ', $class)));
        }
        $classFile.= '.php';
        //echo $classFile;die();
        return include $classFile;
    }

    /**
     * Register autoload scope
     * This process allow include scope file which can contain classes
     * definition which are used for this scope
     *
     * @param string $code scope code
************************************
Файл:        
Строка:      0
Субъект:     spl_autoload_call
Объект:      Varien_Autoload::autoload
Файл:        app/code/core/Mage/Core/Model/Layout.php
Строка:      491
Субъект:     Mage_Core_Model_Layout::_getBlockInstance
Объект:      spl_autoload_call
Контекст:    
if (is_string($block)) {
            if (strpos($block, '/')!==false) {
                if (!$block = Mage::getConfig()->getBlockClassName($block)) {
                    Mage::throwException(Mage::helper('core')->__('Invalid block type: %s', $block));
                }
            }
            if (class_exists($block, false) || mageFindClassFile($block)) {
                $block = new $block($attributes);
            }
        }
        if (!$block instanceof Mage_Core_Block_Abstract) {
            Mage::throwException(Mage::helper('core')->__('Invalid block type: %s', $block));
        }
        return $block;
    }
************************************
Файл:        app/code/local/Df/Core/Model/Layout.php
Строка:      25
Субъект:     Df_Core_Model_Layout::_getBlockInstance
Объект:      Mage_Core_Model_Layout::_getBlockInstance
Контекст:    
	 * @return Mage_Core_Block_Abstract
	 * @throws Exception
	 */
	protected function _getBlockInstance($block, array $attributes=array()) {
		/** @var Mage_Core_Block_Abstract $result */
		$result = null;
		try {
			$result = parent::_getBlockInstance($block, $attributes);
		}
		catch (Exception $e) {
			df_handle_entry_point_exception($e, true, $sendContentTypeHeader = false);
		}
		return $result;
	}
}
************************************
Файл:        app/code/core/Mage/Core/Model/Layout.php
Строка:      437
Субъект:     Mage_Core_Model_Layout::createBlock
Объект:      Df_Core_Model_Layout::_getBlockInstance
Контекст:    
* @param     string $name
     * @param     array $attributes
     * @return    Mage_Core_Block_Abstract
     */
    public function createBlock($type, $name='', array $attributes = array())
    {
        try {
            $block = $this->_getBlockInstance($type, $attributes);
        } catch (Exception $e) {
            Mage::logException($e);
            return false;
        }

        if (empty($name) || '.'===$name{0}) {
            $block->setIsAnonymous(true);
            if (!empty($name)) {
************************************
Файл:        app/code/core/Mage/Core/Model/Layout.php
Строка:      472
Субъект:     Mage_Core_Model_Layout::addBlock
Объект:      Mage_Core_Model_Layout::createBlock
Контекст:    
*
     * @param string|Mage_Core_Block_Abstract $blockClass
     * @param string $blockName
     * @return Mage_Core_Block_Abstract
     */
    public function addBlock($block, $blockName)
    {
        return $this->createBlock($block, $blockName);
    }

    /**
     * Create block object instance based on block type
     *
     * @param string $block
     * @param array $attributes
     * @return Mage_Core_Block_Abstract
************************************
Файл:        app/code/core/Mage/Core/Model/Layout.php
Строка:      239
Субъект:     Mage_Core_Model_Layout::_generateBlock
Объект:      Mage_Core_Model_Layout::addBlock
Контекст:    
$className = (string)$node['type'];
        }

        $blockName = (string)$node['name'];
        $_profilerKey = 'BLOCK: '.$blockName;
        Varien_Profiler::start($_profilerKey);

        $block = $this->addBlock($className, $blockName);
        if (!$block) {
            return $this;
        }

        if (!empty($node['parent'])) {
            $parentBlock = $this->getBlock((string)$node['parent']);
        } else {
            $parentName = $parent->getBlockName();
************************************
Файл:        app/code/core/Mage/Core/Model/Layout.php
Строка:      205
Субъект:     Mage_Core_Model_Layout::generateBlocks
Объект:      Mage_Core_Model_Layout::_generateBlock
Контекст:    
foreach ($parent as $node) {
            $attributes = $node->attributes();
            if ((bool)$attributes->ignore) {
                continue;
            }
            switch ($node->getName()) {
                case 'block':
                    $this->_generateBlock($node, $parent);
                    $this->generateBlocks($node);
                    break;

                case 'reference':
                    $this->generateBlocks($node);
                    break;

                case 'action':
************************************
Файл:        app/code/core/Mage/Core/Model/Layout.php
Строка:      210
Субъект:     Mage_Core_Model_Layout::generateBlocks
Объект:      Mage_Core_Model_Layout::generateBlocks
Контекст:    
switch ($node->getName()) {
                case 'block':
                    $this->_generateBlock($node, $parent);
                    $this->generateBlocks($node);
                    break;

                case 'reference':
                    $this->generateBlocks($node);
                    break;

                case 'action':
                    $this->_generateAction($node, $parent);
                    break;
            }
        }
    }
************************************
Файл:        app/code/core/Mage/Core/Controller/Varien/Action.php
Строка:      344
Субъект:     Mage_Core_Controller_Varien_Action::generateLayoutBlocks
Объект:      Mage_Core_Model_Layout::generateBlocks
Контекст:    
'controller_action_layout_generate_blocks_before',
                array('action'=>$this, 'layout'=>$this->getLayout())
            );
        }

        // generate blocks from xml layout
        Varien_Profiler::start("$_profilerKey::layout_generate_blocks");
        $this->getLayout()->generateBlocks();
        Varien_Profiler::stop("$_profilerKey::layout_generate_blocks");

        if(!$this->getFlag('', self::FLAG_NO_DISPATCH_BLOCK_EVENT)) {
            Mage::dispatchEvent(
                'controller_action_layout_generate_blocks_after',
                array('action'=>$this, 'layout'=>$this->getLayout())
            );
        }
************************************
Файл:        app/code/core/Mage/Catalog/Helper/Product/View.php
Строка:      73
Субъект:     Mage_Catalog_Helper_Product_View::initProductLayout
Объект:      Mage_Core_Controller_Varien_Action::generateLayoutBlocks
Контекст:    
if (is_array($layoutUpdates)) {
                foreach($layoutUpdates as $layoutUpdate) {
                    $update->addUpdate($layoutUpdate);
                }
            }
        }

        $controller->generateLayoutXml()->generateLayoutBlocks();

        // Apply custom layout (page) template once the blocks are generated
        if ($settings->getPageLayout()) {
            $controller->getLayout()->helper('page/layout')->applyTemplate($settings->getPageLayout());
        }

        $currentCategory = Mage::registry('current_category');
        $root = $controller->getLayout()->getBlock('root');
************************************
Файл:        app/code/core/Mage/Catalog/Helper/Product/View.php
Строка:      144
Субъект:     Mage_Catalog_Helper_Product_View::prepareAndRender
Объект:      Mage_Catalog_Helper_Product_View::initProductLayout
Контекст:    
if ($params->getSpecifyOptions()) {
            $notice = $product->getTypeInstance(true)->getSpecifyOptionMessage();
            Mage::getSingleton('catalog/session')->addNotice($notice);
        }

        Mage::getSingleton('catalog/session')->setLastViewedProductId($product->getId());

        $this->initProductLayout($product, $controller);

        $controller->initLayoutMessages(array('catalog/session', 'tag/session', 'checkout/session'))
            ->renderLayout();

        return $this;
    }
}
************************************
Файл:        app/code/core/Mage/Catalog/controllers/ProductController.php
Строка:      132
Субъект:     Mage_Catalog_ProductController::viewAction
Объект:      Mage_Catalog_Helper_Product_View::prepareAndRender
Контекст:    
$params = new Varien_Object();
        $params->setCategoryId($categoryId);
        $params->setSpecifyOptions($specifyOptions);

        // Render page
        try {
            $viewHelper->prepareAndRender($productId, $this, $params);
        } catch (Exception $e) {
            if ($e->getCode() == $viewHelper->ERR_NO_PRODUCT_LOADED) {
                if (isset($_GET['store'])  && !$this->getResponse()->isRedirect()) {
                    $this->_redirect('');
                } elseif (!$this->getResponse()->isRedirect()) {
                    $this->_forward('noRoute');
                }
            } else {
************************************
Файл:        app/code/core/Mage/Core/Controller/Varien/Action.php
Строка:      419
Субъект:     Mage_Core_Controller_Varien_Action::dispatch
Объект:      Mage_Catalog_ProductController::viewAction
Контекст:    
/**
                 * preDispatch() didn't change the action, so we can continue
                 */
                if (!$this->getFlag('', self::FLAG_NO_DISPATCH)) {
                    $_profilerKey = self::PROFILER_KEY.'::'.$this->getFullActionName();

                    Varien_Profiler::start($_profilerKey);
                    $this->$actionMethodName();
                    Varien_Profiler::stop($_profilerKey);

                    Varien_Profiler::start(self::PROFILER_KEY.'::postdispatch');
                    $this->postDispatch();
                    Varien_Profiler::stop(self::PROFILER_KEY.'::postdispatch');
                }
            }
        }
************************************
Файл:        app/code/core/Mage/Core/Controller/Varien/Router/Standard.php
Строка:      250
Субъект:     Mage_Core_Controller_Varien_Router_Standard::match
Объект:      Mage_Core_Controller_Varien_Action::dispatch
Контекст:    
// set parameters from pathinfo
        for ($i = 3, $l = sizeof($p); $i < $l; $i += 2) {
            $request->setParam($p[$i], isset($p[$i+1]) ? urldecode($p[$i+1]) : '');
        }

        // dispatch action
        $request->setDispatched(true);
        $controllerInstance->dispatch($action);

        return true;
    }

    /**
     * Get router default request path
     * @return string
     */
************************************
Файл:        app/code/core/Mage/Core/Controller/Varien/Front.php
Строка:      176
Субъект:     Mage_Core_Controller_Varien_Front::dispatch
Объект:      Mage_Core_Controller_Varien_Router_Standard::match
Контекст:    
Varien_Profiler::start('mage::dispatch::config_url_rewrite');
        $this->rewrite();
        Varien_Profiler::stop('mage::dispatch::config_url_rewrite');
        Varien_Profiler::start('mage::dispatch::routers_match');
        $i = 0;
        while (!$request->isDispatched() && $i++<100) {
            foreach ($this->_routers as $router) {
                if ($router->match($this->getRequest())) {
                    break;
                }
            }
        }
        Varien_Profiler::stop('mage::dispatch::routers_match');
        if ($i>100) {
            Mage::throwException('Front controller reached 100 router match iterations');
        }
************************************
Файл:        app/code/core/Mage/Core/Model/App.php
Строка:      354
Субъект:     Mage_Core_Model_App::run
Объект:      Mage_Core_Controller_Varien_Front::dispatch
Контекст:    
$scopeCode = isset($params['scope_code']) ? $params['scope_code'] : '';
                $scopeType = isset($params['scope_type']) ? $params['scope_type'] : 'store';
                $this->_initCurrentStore($scopeCode, $scopeType);
                $this->_initRequest();
                Mage_Core_Model_Resource_Setup::applyAllDataUpdates();
            }

            $this->getFrontController()->dispatch();
        }
        return $this;
    }

    /**
     * Initialize PHP environment
     *
     * @return Mage_Core_Model_App
************************************
Файл:        app/Mage.php
Строка:      683
Субъект:     Mage::run
Объект:      Mage_Core_Model_App::run
Контекст:    
self::$_events = new Varien_Event_Collection();
            self::_setIsInstalled($options);
            self::_setConfigModel($options);
            self::$_app->run(array(
                'scope_code' => $code,
                'scope_type' => $type,
                'options'    => $options,
            ));
            Varien_Profiler::stop('mage');
        } catch (Mage_Core_Model_Session_Exception $e) {
            header('Location: ' . self::getBaseUrl());
            die();
        } catch (Mage_Core_Model_Store_Exception $e) {
            require_once(self::getBaseDir() . DS . 'errors' . DS . '404.php');
            die();
        } catch (Exception $e) {
************************************
Файл:        index.php
Строка:      87
Субъект:     
Объект:      Mage::run
Контекст:    
/* Store or website code */
$mageRunCode = isset($_SERVER['MAGE_RUN_CODE']) ? $_SERVER['MAGE_RUN_CODE'] : '';

/* Run store or run website */
$mageRunType = isset($_SERVER['MAGE_RUN_TYPE']) ? $_SERVER['MAGE_RUN_TYPE'] : 'store';

Mage::run($mageRunCode, $mageRunType);
************************************